{
  "version": 3,
  "sources": ["../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nvar numelDimension = require( '@stdlib/ndarray-base-numel-dimension' );\nvar getStride = require( '@stdlib/ndarray-base-stride' );\nvar getOffset = require( '@stdlib/ndarray-base-offset' );\nvar getData = require( '@stdlib/ndarray-base-data-buffer' );\nvar strided = require( '@stdlib/blas-ext-base-gfind-index' ).ndarray;\n\n\n// MAIN //\n\n/**\n* Returns the index of the first element in a one-dimensional ndarray which passes a test implemented by a predicate function.\n*\n* @param {ArrayLikeObject<Object>} arrays - array-like object containing an input ndarray\n* @param {Function} clbk - callback function\n* @param {*} [thisArg] - callback execution context\n* @returns {integer} index\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n*\n* function clbk( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var xbuf = [ 1.0, 3.0, 4.0, 2.0 ];\n* var x = new ndarray( 'generic', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var v = gfindIndex( [ x ], clbk );\n* // returns 2\n*/\nfunction gfindIndex( arrays, clbk, thisArg ) {\n\tvar x = arrays[ 0 ];\n\treturn strided( numelDimension( x, 0 ), getData( x ), getStride( x, 0 ), getOffset( x ), wrapper, null ); // eslint-disable-line max-len\n\n\t/**\n\t* Invokes a provided callback.\n\t*\n\t* @private\n\t* @param {*} value - current array element\n\t* @param {NonNegativeInteger} aidx - current array element index\n\t* @param {NonNegativeInteger} sidx - current strided array element index\n\t* @param {Collection} arr - input array\n\t* @returns {*} result\n\t*/\n\tfunction wrapper( value, aidx ) {\n\t\treturn clbk.call( thisArg, value, aidx, x );\n\t}\n}\n\n\n// EXPORTS //\n\nmodule.exports = gfindIndex;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2025 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Return the index of the first element in a one-dimensional ndarray which passes a test implemented by a predicate function.\n*\n* @module @stdlib/blas-ext-base-ndarray-gfind-index\n*\n* @example\n* var ndarray = require( '@stdlib/ndarray-base-ctor' );\n* var gfindIndex = require( '@stdlib/blas-ext-base-ndarray-gfind-index' );\n*\n* function clbk( v ) {\n*     return v % 2.0 === 0.0;\n* }\n*\n* var xbuf = [ 1.0, 3.0, 4.0, 2.0 ];\n* var x = new ndarray( 'generic', xbuf, [ 4 ], [ 1 ], 0, 'row-major' );\n*\n* var v = gfindIndex( [ x ], clbk );\n* // returns 2\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// EXPORTS //\n\nmodule.exports = main;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAAiB,QAAS,sCAAuC,EACjEC,EAAY,QAAS,6BAA8B,EACnDC,EAAY,QAAS,6BAA8B,EACnDC,EAAU,QAAS,kCAAmC,EACtDC,EAAU,QAAS,mCAAoC,EAAE,QA0B7D,SAASC,EAAYC,EAAQC,EAAMC,EAAU,CAC5C,IAAIC,EAAIH,EAAQ,CAAE,EAClB,OAAOF,EAASJ,EAAgBS,EAAG,CAAE,EAAGN,EAASM,CAAE,EAAGR,EAAWQ,EAAG,CAAE,EAAGP,EAAWO,CAAE,EAAGC,EAAS,IAAK,EAYvG,SAASA,EAASC,EAAOC,EAAO,CAC/B,OAAOL,EAAK,KAAMC,EAASG,EAAOC,EAAMH,CAAE,CAC3C,CACD,CAKAV,EAAO,QAAUM,IChCjB,IAAIQ,EAAO,IAKX,OAAO,QAAUA",
  "names": ["require_main", "__commonJSMin", "exports", "module", "numelDimension", "getStride", "getOffset", "getData", "strided", "gfindIndex", "arrays", "clbk", "thisArg", "x", "wrapper", "value", "aidx", "main"]
}
